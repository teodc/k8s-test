# eksctl create cluster -f eks-cluster.yml [--auto-kubeconfig|--kubeconfig="./kubeconfig.yml"]

apiVersion: "eksctl.io/v1alpha5"
kind: "ClusterConfig"

metadata:
  name: "acme"
  region: "ap-northeast-1"
  version: "1.14"
  tags:
    service: "acme"

availabilityZones:
  - "ap-northeast-1a"
  - "ap-northeast-1c"

#vpc:
#  id: "vpc-123"
#  cidr: "172.28.0.0/16"
#  subnets:
#    public:
#      ap-northeast-1a:
#        id: "subnet-123"
#        cidr: "172.28.101.0/24"
#      ap-northeast-1c:
#        id: "subnet-123"
#        cidr: "172.28.102.0/24"
#    private:
#      ap-northeast-1a:
#        id: "subnet-123"
#        cidr: "172.28.201.0/24"
#      ap-northeast-1c:
#        id: "subnet-123"
#        cidr: "172.28.202.0/24"

nodeGroups:
  - name: "ng-1"
    instanceType: "t3.micro"
    ami: "auto"
    amiFamily: "Ubuntu1804"
    labels:
      foo: "bar"
    desiredCapacity: 2
    minSize: 2
    maxSize: 2
    volumeSize: 10
    volumeType: "gp2"
    privateNetworking: false
    ssh:
      allow: true
      publicKeyPath: "~/.ssh/acme_rsa.pub"
    availabilityZones:
      - "ap-northeast-1a"
    tags:
      service: "acme"
#    securityGroups:
#      withShared: true
#      withLocal: true
#      attachIDs:
#        - "sg-123"
#        - "sg-123"
#    iam:
#      instanceProfileARN: "arn:aws:iam::123:instance-profile/foo"
#      instanceRoleARN: "arn:aws:iam::123:role/foo"
#      attachPolicyARNs:
#        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
#        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
#        - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
#        - arn:aws:iam::123:policy/foo
#      withAddonPolicies:
#        imageBuilder: true
#        autoScaler: true

#cloudWatch:
#  clusterLogging:
#    enableTypes:
#      - "api"
#      - "audit"
#      - "authenticator"
#      - "controllerManager"
#      - "scheduler"
